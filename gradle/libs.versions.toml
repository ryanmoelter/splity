[versions]
kotlin = "1.8.22"
coroutines = "1.7.2"
ksp = "1.8.22-1.0.11"
inject = "0.6.1"
hoplite = "2.7.4"
sqldelight = "1.5.5"
datetime = "0.4.0"
moshi = "1.15.0"
okhttp = "4.11.0"
retrofit = "2.9.0"
kotest = "5.6.2"

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
sqldelight = { id = "com.squareup.sqldelight", version.ref = "sqldelight" }
spotless = { id = "com.diffplug.spotless", version = "6.19.0" }
yelp-codegen = { id = "com.yelp.codegen.plugin", version = "1.4.1" }

[libraries]
# Kotlin
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

# Injection
kotlin-inject-runtime = { module = "me.tatarka.inject:kotlin-inject-runtime", version.ref = "inject" }
kotlin-inject-compiler-ksp = { module = "me.tatarka.inject:kotlin-inject-compiler-ksp", version.ref = "inject" }

# Config
hoplite-core = { module = "com.sksamuel.hoplite:hoplite-core", version.ref = "hoplite" }
hoplite-yaml = { module = "com.sksamuel.hoplite:hoplite-yaml", version.ref = "hoplite" }

# Database
sqldelight-driver-jvm = { module = "com.squareup.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-coroutines-extensions = { module = "com.squareup.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
uuid = { module = "com.benasher44:uuid", version = "0.7.1" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }

# API
moshi = { module = "com.squareup.moshi:moshi", version.ref = "moshi" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi" }
moshi-adapters = { module = "com.squareup.moshi:moshi-adapters", version.ref = "moshi" }
moshi-kotlin-codegen = { module = "com.squareup.moshi:moshi-kotlin-codegen", version.ref = "moshi" }

okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttp-logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }
okhttp-mockwebserver = { module = "com.squareup.okhttp3:mockwebserver", version.ref = "okhttp" }
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit"}
retrofit-converter-moshi = { module = "com.squareup.retrofit2:converter-moshi", version.ref = "retrofit"}

threetenbp = { module = "org.threeten:threetenbp", version = "1.6.8" }

# Testing
junit4 = { module = "junit:junit", version = "4.13.2"}
junit5 = { module = "org.junit.jupiter:junit-jupiter", version = "5.9.3" }
strikt = { module = "io.strikt:strikt-core", version = "0.34.1"}
mockk = { module = "io.mockk:mockk", version = "1.13.5" }
kotest-runner = { module = "io.kotest:kotest-runner-junit5", version.ref = "kotest"}
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-framework-datatest = { module = "io.kotest:kotest-framework-datatest", version.ref = "kotest" }

# Sentry
sentry = { module = "io.sentry:sentry", version = "6.24.0" }
