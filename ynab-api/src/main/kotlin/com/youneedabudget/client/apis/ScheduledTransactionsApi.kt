/**
 * NOTE: This class is auto generated by the Swagger Gradle Codegen for the following API: YNAB API Endpoints
 *
 * More info on this tool is available on https://github.com/Yelp/swagger-gradle-codegen
 */

package com.youneedabudget.client.apis

import com.youneedabudget.client.models.ScheduledTransactionResponse
import com.youneedabudget.client.models.ScheduledTransactionsResponse
import retrofit2.http.GET
import retrofit2.http.Headers

@JvmSuppressWildcards
interface ScheduledTransactionsApi {
    /**
     * Single scheduled transaction
     * Returns a single scheduled transaction
     * The endpoint is owned by defaultname service owner
     * @param budgetId The id of the budget. \&quot;last-used\&quot; can be used to specify the last used budget and \&quot;default\&quot; can be used if default budget selection is enabled (see: https://api.ynab.com/#oauth-default-budget). (required)
     * @param scheduledTransactionId The id of the scheduled transaction (required)
     */
    @Headers(
        "X-Operation-ID: getScheduledTransactionById"
    )
    @GET("budgets/{budget_id}/scheduled_transactions/{scheduled_transaction_id}")
    suspend fun getScheduledTransactionById(
        @retrofit2.http.Path("budget_id") budgetId: String,
        @retrofit2.http.Path("scheduled_transaction_id") scheduledTransactionId: String
    ): ScheduledTransactionResponse
    /**
     * List scheduled transactions
     * Returns all scheduled transactions
     * The endpoint is owned by defaultname service owner
     * @param budgetId The id of the budget. \&quot;last-used\&quot; can be used to specify the last used budget and \&quot;default\&quot; can be used if default budget selection is enabled (see: https://api.ynab.com/#oauth-default-budget). (required)
     * @param lastKnowledgeOfServer The starting server knowledge.  If provided, only entities that have changed since `last_knowledge_of_server` will be included. (optional)
     */
    @Headers(
        "X-Operation-ID: getScheduledTransactions"
    )
    @GET("budgets/{budget_id}/scheduled_transactions")
    suspend fun getScheduledTransactions(
        @retrofit2.http.Path("budget_id") budgetId: String,
        @retrofit2.http.Query("last_knowledge_of_server") lastKnowledgeOfServer: Long?
    ): ScheduledTransactionsResponse
}
